{"version":3,"sources":["utils/storage.js","store/action.js","store/reducer.js","store/store.js","components/List-Item/List-Item.js","components/Add-Item/Add.js","components/List/List.js","components/App.js","index.js"],"names":["getObj","key","string","localStorage","getItem","get","obj","JSON","parse","console","log","e","setObj","value","setItem","set","stringify","FETCH_LIST","ADD_FRIEND","ADD_TO_FAVOURITE","DELETE_FRIEND","SEARCH_FRIEND","SORT","FRIENDS_LIST","fetchList","list","store","dispatch","type","data","initialState","order","createStore","combineReducers","friends","state","action","composeWithDevTools","ListItem","props","friend","useState","deleting","setDeleting","className","name","onClick","friendToFav","find","f","id","fav","addToFavourite","setTimeout","listWithoutFriend","filter","deleteFriend","Add","form","useRef","handleFormSubmit","preventDefault","push","length","addFriend","current","onSubmit","ref","onKeyDown","which","placeholder","connect","useEffect","sortedByFav","sort","x","y","reOrder","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe967b2f.chunk.js","sourcesContent":["const get = (key) => {\n    return localStorage.getItem(key) || null;\n};\n\nexport const getObj = (key) => {\n    const string = get(key);\n    try {\n        const obj = JSON.parse(string);\n        console.log({ key, obj });\n        return obj;\n    } catch (e) {\n        return {};\n    }\n};\n\nconst set = (key, value) => {\n    return localStorage.setItem(key,value) || null;\n};\n\nexport const setObj = (key, value) => {\n    set(key, JSON.stringify(value));\n};\n","import store from \"./store\";\nimport { getObj, setObj } from \"../utils/storage\";\n\nexport const FETCH_LIST = \"FETCH_LIST\";\nexport const ADD_FRIEND = \"ADD_FRIEND\";\nexport const ADD_TO_FAVOURITE = \"ADD_TO_FAVOURITE\";\nexport const DELETE_FRIEND = \"DELETE_FRIEND\";\nexport const SEARCH_FRIEND = \"SEARCH_FRIEND\";\nexport const SORT = \"SORT\";\n\nexport const ORDER = {\n    FAV: \"FAV\",\n    N_FAV: \"N_FAV\",\n};\n\nconst FRIENDS_LIST = \"FRIENDS_LIST\";\n\nexport const fetchList = () => {\n    const list = getObj(FRIENDS_LIST) || [];\n    store.dispatch({ type: FETCH_LIST, data: list });\n};\n\nexport const addFriend = (friend) => {\n    const list = getObj(FRIENDS_LIST) || [];\n    list.push({ name: friend, fav: false, id: list.length + 1 });\n    setObj(FRIENDS_LIST, list);\n    store.dispatch({ type: ADD_FRIEND, data: list });\n};\n\nexport const addToFavourite = (friend) => {\n    const list = getObj(FRIENDS_LIST) || [];\n    const friendToFav = list.find((f) => f.id === friend.id);\n    friendToFav.fav = !friendToFav.fav;\n    setObj(FRIENDS_LIST, list);\n    store.dispatch({ type: ADD_TO_FAVOURITE, data: list });\n};\n\nexport const deleteFriend = (friend) => {\n    const list = getObj(FRIENDS_LIST) || [];\n    const listWithoutFriend = list.filter((f) => f.id !== friend.id);\n    setObj(FRIENDS_LIST, listWithoutFriend);\n    store.dispatch({ type: DELETE_FRIEND, data: listWithoutFriend });\n};\n\nexport const reOrder = () => {\n    const list = getObj(FRIENDS_LIST) || [];\n    const sortedByFav = list.sort((x, y) => (x === y ? 0 : x ? -1 : 1));\n    console.log({ sortedByFav });\n    setObj(FRIENDS_LIST, sortedByFav);\n    store.dispatch({ type: SORT, data: sortedByFav });\n};\n\nexport const searchFriend = (friend) => {\n    // const searchedFriend = get(friend.id);\n    // store.dispatch({ type: SEARCH_FRIEND, data: searchedFriend });\n}\n","import { FETCH_LIST, ADD_FRIEND, ADD_TO_FAVOURITE, DELETE_FRIEND, SEARCH_FRIEND, SORT, ORDER } from \"./action\";\n\nconst initialState = {\n    list: [],\n    order: ORDER.N_FAV,\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case FETCH_LIST:\n        case ADD_FRIEND:\n        case ADD_TO_FAVOURITE:\n        case DELETE_FRIEND:\n        case SEARCH_FRIEND:\n        case SORT:\n            return {\n                ...state,\n                list: action.data,\n            };\n        default:\n            return state;\n    }\n}\n","import { createStore, combineReducers } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from \"./reducer\";\n\nconst store = createStore(\n    combineReducers({\n        friends: rootReducer,\n    }),\n    composeWithDevTools()\n);\n\nexport default store;\n","import React, { useState } from \"react\";\nimport { addToFavourite, deleteFriend } from \"../../store/action\";\n\nconst ListItem = (props) => {\n    const { friend } = props;\n    const [deleting, setDeleting] = useState(false);\n    const handleAddToFav = () => {\n        addToFavourite(friend);\n    };\n\n    const handleDelete = () => {\n        setDeleting(true);\n        setTimeout(() => {\n            deleteFriend(friend);\n        }, 1000);\n    };\n    return (\n        <div className=\"list-item-container\">\n            <div className=\"name\">{friend.name}</div>\n            <div className=\"actions\">\n                <span className=\"action\" onClick={handleAddToFav}>{friend.fav ? \"⭐\" : \"☆\"}</span>\n                <span className=\"action\" onClick={handleDelete}>{deleting ? \"🥺\" : \"🗑️\"}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default ListItem;\n","import React, { useRef } from \"react\";\nimport { addFriend } from \"../../store/action\";\n\nconst Add = () => {\n    const form = useRef(null);\n    const handleKeyDown = (e) => {\n        if (e.which === \"13\" && e.key === \"Enter\") {\n            handleFormSubmit(e);\n        }\n    };\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        const name = form.current.name.value;\n        addFriend(name)\n        form.current.name.value = \"\";\n    };\n    return (\n        <form className=\"form\" onSubmit={handleFormSubmit} ref={form}>\n            <input type=\"text\" className=\"input\" name=\"name\" onKeyDown={handleKeyDown} placeholder=\"Enter your friend's name\" />\n        </form>\n    );\n};\n\nexport default Add;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Item from \"./../List-Item/List-Item\";\nimport { fetchList, reOrder } from \"../../store/action\";\nimport Add from \"./../Add-Item/Add\";\n\nconst List = (props) => {\n    const { friends } = props;\n\n    console.log({ friends });\n    useEffect(() => {\n        fetchList();\n        if (friends.list.length > 4) {\n\n        }\n    }, []);\n\n    const handleSort = () => {\n        reOrder();\n    };\n\n    return (\n        <div className=\"list-container\">\n            <div className=\"heading\">\n                <span>Friends List</span>\n                <span className=\"actions\" onClick={handleSort}>⭐</span>\n            </div>\n            <Add />\n            {friends.list.map((friend) => {\n                return <Item key={friend.id} friend={friend} />;\n            })}\n            {friends.list.length > 4 &&\n                <h2>\n                    test\n                </h2>\n            }\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    friends: state.friends,\n});\n\nexport default connect(mapStateToProps, { fetchList })(List);\n","import { Provider } from \"react-redux\";\nimport store from \"./../store/store\";\n\nimport \"./App.css\";\n\nimport List from \"./List/List\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div className=\"App-container\">\n                <div className=\"App\">\n                    <List />\n                </div>\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}